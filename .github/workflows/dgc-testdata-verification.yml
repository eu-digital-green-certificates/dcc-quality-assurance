# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: DGC PNG Verification
on:
  workflow_dispatch:
    inputs:
      country_code:
        description: 'Country Code'
        required: true
        default: '*'
      additional_params:
        description: 'Additional Parameters'
        required: false
        default: ''
  pull_request:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        sudo apt-get install libzbar0
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f tests/requirements.txt ]; then pip install -r tests/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Validate DCC QA Pull Request
      if: ${{ github.event_name != 'workflow_dispatch' }}
      env:
        DCC_KID_LIST: ${{ secrets.DCC_KID_LIST }}
        DCC_CERT_LIST: ${{ secrets.DCC_CERT_LIST }}
        DCC_VALUESET_LIST_ALT: ${{ secrets.DCC_VALUESET_LIST_ALT }}
        # Not official reference, just used for quick check of pull requests
        DCC_VALUESET_LIST: https://distribution-cff4f7147260.dcc-rules.de/valuesets
        DCC_SCHEMA_BASE_URI: https://raw.githubusercontent.com/ehn-dcc-development/ehn-dcc-schema/release/
      run: |
        pytest --tb=short --no-signature-check -rfEx --md-report --md-report-verbose=1 --md-report-zeros=number --html=dgc_testdata_report.html --self-contained-html --junit-xml=pytest.xml
    - name: Validate DCC QA Workflow Dispatch
      if: ${{ github.event_name == 'workflow_dispatch' }}
      env:
        DCC_KID_LIST: ${{ secrets.DCC_KID_LIST }}
        DCC_CERT_LIST: ${{ secrets.DCC_CERT_LIST }}
        DCC_VALUESET_LIST: ${{ secrets.DCC_VALUESET_LIST }}
        DCC_VALUESET_LIST_ALT: ${{ secrets.DCC_VALUESET_LIST_ALT }}
        DCC_SCHEMA_BASE_URI: ${{ secrets.DCC_SCHEMA_BASE_URI }}
      run: |
        pytest -vs -C=${{ github.event.inputs.country_code }} ${{ github.event.inputs.additional_params }} --tb=short -rfEx --md-report --md-report-verbose=1 --md-report-zeros=number --html=dgc_testdata_report.html --self-contained-html --junit-xml=pytest.xml



